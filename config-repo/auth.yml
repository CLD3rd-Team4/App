server:
  port: 8080

spring:
  application:
    name: auth

  datasource:
    url: "{cipher}569c1c314da35d12120495ae86e04d2b7b668f18b0f3747e26687ed19d7c0e9875d5c81e113db1148c64521ab8a22f2980fbb0d71012ec823930dd12b880baf9fc937984ef4382cb3bcf38f734e33e589f01479e303eef6189492fe08cb3068436befc18b5090db00d0d0b62d3f847b6b3ab4dcb237b862399fce68501857c20"
    username: "{cipher}995dfde6ea6ecd8bbd5a0ee2910a702e005be23ab5892cf6d95f4fca0d1b11ab"
    password: "{cipher}9bd7424c08e3de951c830c47941f93c33ae97a808789991e1df5bd5d062d8774"
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      authorizationserver:
        client:
          mapzip-client:
            registration:
              client-id: "mapzip-client"
              client-secret: "{cipher}e12398d0e53e0cfc0b02b86dfc9eb5c2c118b8ebb82196be473afcf3645128d860659d41fcef7c7e67eb34658d12bd3e"
              client-authentication-methods:
                - client_secret_basic
                - client_secret_post
              authorization-grant-types:
                - authorization_code
                - refresh_token
              redirect-uris:
                - http://gateway.service-platform.svc.cluster.local:8080/login/oauth2/code/mapzip-client
              scopes:
                - read
                - write
              require-authorization-consent: true

  cloud:
    kubernetes:
      discovery:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true

jwt:
  secret: "{cipher}7b6b9294d39c3d8255fc378565a0565742c5c044cbd4dccb61fcfde909bc4563a7a6af6e424f8d36a9a3c72164ca1ecb13d11fc82f95c8d242a0acab103e1155"
  expiration: 86400000


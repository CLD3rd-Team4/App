# Docker Compose for Review Service Development
version: '3.8'

services:
  # Review Service
  review-service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: review-service
    ports:
      - "8080:8080"    # HTTP port
      - "50051:50051"  # gRPC port
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - AWS_REGION=ap-northeast-2
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - S3_BUCKET_NAME=mapzip-images-dev
      - GOOGLE_CLOUD_VISION_API_KEY=${GOOGLE_CLOUD_VISION_API_KEY}
    depends_on:
      - dynamodb-local
      - localstack
    networks:
      - review-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Local DynamoDB for development
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "./data"]
    volumes:
      - ./dynamodb-data:/home/dynamodblocal/data
    networks:
      - review-network
    restart: unless-stopped

  # LocalStack for S3 emulation
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - AWS_DEFAULT_REGION=ap-northeast-2
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
    volumes:
      - "./localstack-data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - review-network
    restart: unless-stopped

  # DynamoDB Admin UI
  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    container_name: dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000
    depends_on:
      - dynamodb-local
    networks:
      - review-network
    restart: unless-stopped

networks:
  review-network:
    driver: bridge

volumes:
  dynamodb-data:
  localstack-data:
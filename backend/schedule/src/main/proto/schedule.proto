syntax = "proto3";

package schedule;

import "google/api/annotations.proto";

option java_multiple_files = true;
option java_package = "com.mapzip.schedule.grpc";
option java_outer_classname = "ScheduleProto";

// ===================================================================
// 1. 서비스 정의 (Service Definition)
// ===================================================================

service ScheduleService {
  
  // 스케줄 생성
  rpc CreateSchedule(CreateScheduleRequest) returns (CreateScheduleResponse) {
    option (google.api.http) = {
      post: "/schedule"
      body: "*"
    };
  }
  
  // 스케줄 목록 조회
  rpc GetScheduleList(GetScheduleListRequest) returns (GetScheduleListResponse) {
    option (google.api.http) = {
      get: "/schedule"
    };
  }

  // 특정 스케줄 상세 조회
  rpc GetScheduleDetail(GetScheduleDetailRequest) returns (GetScheduleDetailResponse) {
    option (google.api.http) = {
      get: "/schedule/{scheduleId}"
    };
  }
  
  // 스케줄 수정
  rpc UpdateSchedule(UpdateScheduleRequest) returns (GetScheduleDetailResponse) {
    option (google.api.http) = {
      put: "/schedule/{scheduleId}"
      body: "*"
    };
  }

  // 스케줄 삭제
  rpc DeleteSchedule(DeleteScheduleRequest) returns (DeleteScheduleResponse) {
    option (google.api.http) = {
      delete: "/schedule/{scheduleId}"
    };
  }

  
}

// ===================================================================
// 2. 공통 메시지 타입 (Common Message Types)
// ===================================================================

message Location {
  double lat = 1;
  double lng = 2;
  string name = 3;
  string address = 4;
}

message Waypoint {
  double lat = 1;
  double lng = 2;
  string name = 3;
  string arrivalTime = 4; // recommend-service가 계산 후 채워줄 필드
}

message MealTimeSlot {
  string slotId = 1;          // 고유 슬롯 ID (DB PK)
  MealType mealType = 2;      // 식사/간식 구분
  string scheduledTime = 3;   // 예정 시간 (예: "오후 12:30")
  int32 radius = 4;           // 검색 반경 (미터)
}

enum MealType {
  MEAL = 0;    // 식사
  SNACK = 1;   // 간식
}

// ===================================================================
// 3. API별 요청/응답 메시지 (API-specific Messages)
// ===================================================================

// 3.1 스케줄 생성
message CreateScheduleRequest {
  string userId = 1;
  string title = 2;
  string departureTime = 3;
  repeated MealTimeSlot mealSlots = 4;
  Location departure = 5;
  repeated Waypoint waypoints = 6;
  Location destination = 7;
  string userNote = 8;
  string purpose = 9;
  repeated string companions = 10;
}

message CreateScheduleResponse {
  string scheduleId = 1;
  string message = 2;
  bool success = 3;
}

// 3.2 스케줄 목록 조회
message GetScheduleListRequest {
  string userId = 1;
}

message GetScheduleListResponse {
  message ScheduleSummary {
    string scheduleId = 1;
    string title = 2;
    string departureTime = 3;
    string destinationName = 4;
    int32 totalMealSlots = 5;
  }
  repeated ScheduleSummary schedules = 1;
}

// 3.3 특정 스케줄 상세 조회
message GetScheduleDetailRequest {
  string scheduleId = 1;
  string userId = 2;
}

message GetScheduleDetailResponse {
  message ScheduleDetail {
    string scheduleId = 11; // ID 추가
    string userId = 12;     // userId 추가
    string title = 1;
    string departureTime = 2;
    string calculatedArrivalTime = 3; // recommend-service가 계산 후 채워줄 필드
    repeated MealTimeSlot mealSlots = 4;
    Location departure = 5;
    repeated Waypoint waypoints = 6;
    Location destination = 7;
    string userNote = 8;
    string purpose = 9;
    repeated string companions = 10;
  }
  ScheduleDetail schedule = 1;
}

// 3.4 스케줄 수정
message UpdateScheduleRequest {
  string scheduleId = 1;
  string userId = 2;
  string title = 3;
  string departureTime = 4;
  repeated MealTimeSlot mealSlots = 5;
  Location departure = 6;
  repeated Waypoint waypoints = 7;
  Location destination = 8;
  string userNote = 9;
  string purpose = 10;
  repeated string companions = 11;
}

// 3.5 스케줄 삭제
message DeleteScheduleRequest {
  string scheduleId = 1;
  string userId = 2;
}

message DeleteScheduleResponse {
  string message = 1;
  bool success = 2;
}




